
----Q1FROM people
SELECT min(yearid) AS earliest_year, max(yearid) AS latest_year
FROM teams;

---Q2

SELECT  people.namefirst, people.namelast, teams.name as team_name, ap.g_all as number_of_games,   people.height 
from appearances as ap  inner join teams on ap.teamid = teams.teamid
inner join people on ap.playerid = people.playerid
where height  = 43
GROUP by   people.namefirst, people.height, teams.name, people.namelast, ap.g_all
order by people.height

---Q3

SELECT distinct namefirst|| ' ' ||namelast AS full_name, (sum(sal.salary::numeric)::money) as total_salary
FROM people as pp
	JOIN salaries as sal using(playerid)
	JOIN CollegePlaying as clp on pp.playerid = clp.playerid
	JOIN schools as sch on clp.schoolid = sch.schoolid
WHERE sch.schoolid = 'vandy' 
GROUP BY pp.namefirst, pp.namelast
ORDER BY total_salary desc NULLS LAST; 

--Q6


SELECT pp.namefirst, PP.namelast,  yearid,  (sb + cs) as total_stealing, ROUND((sb::decimal/(sb+cs)::decimal*100),2) as sb_success_percent
FROM batting as fd inner join people as pp using(playerid)
where (sb+cs) >= 20 and yearid = '2016'
GROUP by yearid, playerid, pp.namefirst, sb, cs, pp.namelast
Order by  sb_success_percent desc
LIMIT 5;

-- Q7

WITH team_win AS (SELECT teamidwinner, round, sum(wins) AS total_wins, yearid
				  FROM SeriesPost 
				  where round <> 'WS'
				  GROUP BY teamidwinner, round, yearid
				  ORDER BY total_wins desc),

ws_lose AS (SELECT teamidloser, round, yearid
			FROM SeriesPost 
			WHERE round = 'WS')
SELECT tw.teamidwinner, tw.total_wins, tw.yearid
FROM team_win AS tw JOIN ws_lose AS wl  using(yearid)
WHERE yearid in ('1970','2016')
GROUP by tw.teamidwinner, tw.total_wins, tw.yearid
ORDER BY tw.total_wins desc


SELECT teamidwinner, wins 
FROM SeriesPost 
WHERE teamidwinner in (select teamidwinner FROMSeriesPost   where round = 'WS' )
ORDER BY wins

--Q8 
--TOP 5
SELECT park_name, team, park, SUM(attendance)/count(games)as avg_attendance, year 
FROM homegames as hg inner join parks using(park) 
where year = '2016' 
GROUP by  team, park, year, park_name, games  
HAVING games > 9
ORDER by avg_attendance desc
LIMIT 5
---lowest 5
SELECT park_name, team, park, SUM(attendance)/count(games)as avg_attendance, year 
FROM homegames as hg inner join parks using(park) 
where year = '2016' 
GROUP by  team, park, year, park_name, games  
HAVING games > 9
ORDER by avg_attendance 
LIMIT 5

---Q9
SELECT distinct CONCAT(pp.namefirst,' ', pp.namelast) AS full_name, m.teamid, am.yearid, am.lgid
FROM AwardsManagers am inner join managers AS m using(playerid) 
JOIN people AS pp on  m.playerid = pp.playerid 
Where pp.playerid in 
(WITH lgid_Al AS (SELECT lgid as la_leagu, awardid as la_award, playerid, yearid as al_year
				 FROM AwardsManagers
				 WHERE lgid = 'AL' AND awardid = 'TSN Manager of the Year'),
	lgid_NL AS  (SELECT lgid AS nl_leagu, awardid as nl_award, playerid, yearid as nl_year
				 FROM AwardsManagers AS aw
				 WHERE lgid = 'NL' AND awardid = 'TSN Manager of the Year')
		SELECT distinct playerid FROM lgid_Al AS al_l INNER JOIN lgid_NL AS nl_l USING(playerid))
		AND m.yearid = am.yearid
GROUP By pp.namefirst, pp.namelast, m.teamid, am.yearid, am.lgid
order by full_name, yearid



--Q10
WITH a AS (SELECT b.playerid,
		  ((p.finalgame::date)-(p.debut::date))/365 AS years_played
		  FROM people AS p INNER JOIN batting AS b USING(playerid)),
	 b AS (SELECT DISTINCT playerid, MAX(hr) AS most_hr
			FROM batting
			GROUP BY playerid)
SELECT DISTINCT CONCAT(p.namefirst,' ',p.namelast) AS full_name, hr AS home_runs
FROM a INNER JOIN b USING(playerid)
	   INNER JOIN people AS p USING (playerid)
	   INNER JOIN batting USING (playerid)
WHERE a.years_played > 9
	AND hr > 0
	AND yearid = 2016
	AND most_hr = hr
ORDER BY home_runs DESC;


